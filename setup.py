#!/usr/bin/env python3
"""
🤖 Ubot Telegram - Interactive Setup Script
Mudah setup bot dengan 1 command!
"""

import os
import sys
from pathlib import Path

def print_banner():
    banner = """
╔══════════════════════════════════════════════════╗
║                                                  ║
║        🤖 UBOT TELEGRAM SETUP WIZARD 🤖         ║
║                                                  ║
║     Setup bot Anda dengan mudah dan cepat!      ║
║                                                  ║
╚══════════════════════════════════════════════════╝
    """
    print("\033[96m" + banner + "\033[0m")

def get_input(prompt, default=None, required=True):
    """Get user input with validation"""
    while True:
        if default:
            value = input(f"\033[93m{prompt}\033[0m (default: {default}): ").strip()
            if not value:
                return default
        else:
            value = input(f"\033[93m{prompt}\033[0m: ").strip()
        
        if value or not required:
            return value
        
        print("\033[91m❌ Field ini wajib diisi!\033[0m")

def setup_env():
    """Interactive setup untuk .env file"""
    print("\n\033[92m📝 Mari setup konfigurasi bot Anda...\033[0m\n")
    
    # Check if .env exists
    env_exists = os.path.exists('.env')
    if env_exists:
        overwrite = get_input("⚠️  File .env sudah ada. Overwrite? (y/n)", default="n", required=False)
        if overwrite.lower() != 'y':
            print("\033[93m✓ Menggunakan .env yang sudah ada\033[0m")
            return
    
    print("\033[96m\n=== KONFIGURASI DASAR ===\033[0m")
    
    # Get configurations
    config = {}
    
    print("\n\033[94m1️⃣  BOT TOKEN\033[0m")
    print("   Dapatkan dari @BotFather di Telegram")
    config['BOT_TOKEN'] = get_input("   Token Bot")
    
    print("\n\033[94m2️⃣  API CREDENTIALS\033[0m")
    print("   Dapatkan dari https://my.telegram.org")
    config['API_ID'] = get_input("   API ID")
    config['API_HASH'] = get_input("   API Hash")
    
    print("\n\033[94m3️⃣  OWNER CONFIGURATION\033[0m")
    print("   Masukkan User ID Telegram Anda")
    print("   (Gunakan @userinfobot untuk mendapatkan ID)")
    config['OWNER_ID'] = get_input("   Owner ID")
    config['DEVS'] = get_input("   Developer IDs (pisahkan dengan spasi)", default=config['OWNER_ID'])
    
    print("\n\033[94m4️⃣  MONGODB DATABASE\033[0m")
    print("   Dapatkan dari https://mongodb.com (Free tier available)")
    config['MONGO_URL'] = get_input("   MongoDB URL")
    
    print("\n\033[94m5️⃣  ADDITIONAL SETTINGS\033[0m")
    config['MAX_BOT'] = get_input("   Max Bot/Userbot yang bisa aktif", default="100")
    config['BLACKLIST_CHAT'] = get_input("   Blacklist Chat IDs (pisahkan dengan spasi)", default="", required=False)
    config['LOGS_MAKER_UBOT'] = get_input("   Log Channel/Group ID", default="", required=False)
    
    print("\n\033[94m6️⃣  OPTIONAL API KEYS\033[0m")
    config['RMBG_API'] = get_input("   Remove.bg API Key (untuk remove background)", default="", required=False)
    
    # Write to .env
    env_content = f"""# Ubot Telegram Configuration
# Generated by setup.py

# Bot Configuration
MAX_BOT = {config['MAX_BOT']}
BOT_TOKEN = {config['BOT_TOKEN']}

# Telegram API
API_ID = {config['API_ID']}
API_HASH = {config['API_HASH']}

# Owner & Developers
OWNER_ID = {config['OWNER_ID']}
DEVS = {config['DEVS']}

# Database
MONGO_URL = {config['MONGO_URL']}

# Optional Settings
BLACKLIST_CHAT = {config['BLACKLIST_CHAT']}
LOGS_MAKER_UBOT = {config['LOGS_MAKER_UBOT']}
RMBG_API = {config['RMBG_API']}
"""
    
    with open('.env', 'w') as f:
        f.write(env_content)
    
    print("\n\033[92m✅ File .env berhasil dibuat!\033[0m")

def check_dependencies():
    """Check if dependencies are installed"""
    print("\n\033[96m📦 Checking dependencies...\033[0m")
    
    try:
        import pyrogram
        import motor
        import aiohttp
        print("\033[92m✅ Dependencies sudah terinstall\033[0m")
        return True
    except ImportError as e:
        print(f"\033[91m❌ Missing dependency: {e}\033[0m")
        print("\n\033[93m📥 Installing dependencies...\033[0m")
        os.system("pip install -r requirements.txt")
        return True

def create_supervisor_config():
    """Create supervisor config for auto-start"""
    print("\n\033[96m🔧 Creating supervisor configuration...\033[0m")
    
    supervisor_conf = """[supervisord]
nodaemon=true
logfile=/dev/null
logfile_maxbytes=0

[program:ubot]
directory=/app
command=python3 -m PyroUbot
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/ubot.err.log
stdout_logfile=/var/log/supervisor/ubot.out.log
"""
    
    os.makedirs('/etc/supervisor/conf.d', exist_ok=True)
    with open('/etc/supervisor/conf.d/ubot.conf', 'w') as f:
        f.write(supervisor_conf)
    
    print("\033[92m✅ Supervisor config created\033[0m")

def main():
    """Main setup function"""
    print_banner()
    
    print("\n\033[96mSelamat datang di Ubot Telegram Setup!\033[0m")
    print("\033[93mScript ini akan membantu Anda setup bot dengan mudah.\033[0m\n")
    
    # Step 1: Setup environment
    setup_env()
    
    # Step 2: Check dependencies
    check_dependencies()
    
    # Step 3: Create supervisor config
    create_supervisor_config()
    
    # Done!
    print("\n" + "="*60)
    print("\033[92m")
    print("✅ SETUP SELESAI!")
    print("\033[0m")
    print("\n\033[96m📚 Cara menjalankan bot:\033[0m")
    print("   \033[93m1.\033[0m python3 -m PyroUbot")
    print("   \033[93m2.\033[0m sudo supervisorctl start ubot  (auto-restart)")
    print("\n\033[96m📝 Cara cek status:\033[0m")
    print("   \033[93m•\033[0m sudo supervisorctl status")
    print("\n\033[96m🛑 Cara stop bot:\033[0m")
    print("   \033[93m•\033[0m sudo supervisorctl stop ubot")
    print("\n" + "="*60)
    print("\n\033[92m🎉 Happy botting! 🤖\033[0m\n")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n\033[91m❌ Setup dibatalkan\033[0m")
        sys.exit(1)
    except Exception as e:
        print(f"\n\033[91m❌ Error: {e}\033[0m")
        sys.exit(1)
